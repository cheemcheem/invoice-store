name: CD

on:
  push:
    branches: [ master, develop, hotfix ]
  pull_request:
    branches: [ master, develop ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Start NPM Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{runner.os}}-npm-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{runner.os}}-npm-${{hashFiles('**/package-lock.json')}}
            ${{runner.os}}-npm-
      
      - name: Start Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
            ${{runner.os}}-m2-
      
      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: 13
      
      - name: Compile with Maven
        run: ./mvnw -B clean compile -DskipTests --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Target Folder
        uses: actions/upload-artifact@master
        with:
          name: maven compile
          path: target/

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Start NPM Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{runner.os}}-npm-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{runner.os}}-npm-${{hashFiles('**/package-lock.json')}}
            ${{runner.os}}-npm-
      
      - name: Start Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
            ${{runner.os}}-m2-
      
      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: 13
      
      - name: Download Target Folder
        uses: actions/download-artifact@master
        with:
          name: maven compile
          path: target/
      
      - name: Test with Maven
        run: ./mvnw -B test --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    name: Package
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Start NPM Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{runner.os}}-npm-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{runner.os}}-npm-${{hashFiles('**/package-lock.json')}}
            ${{runner.os}}-npm-
      
      - name: Start Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
            ${{runner.os}}-m2-
      
      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: 13
      
      - name: Download Target Folder
        uses: actions/download-artifact@master
        with:
          name: maven compile
          path: target/
    
      - name: Build with Maven
        run: ./mvnw -B package -DskipTests --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Target Folder
        uses: actions/upload-artifact@master
        with:
          name: maven package
          path: target/

  deploy:
    name: Deploy
    needs: package
    if: ${{(github.ref == 'refs/heads/develop') || (github.ref == 'refs/heads/hotfix')}}
    runs-on: ubuntu-latest
    steps:
      - name: Download Target Folder
        uses: actions/download-artifact@master
        with:
          name: maven package
          path: target/
      
      - name: Update SHA
        run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/src/_meta

      - name: Build container image
        run: docker build -t ${{secrets.DOCKER_REGISTRY}}:$(echo $GITHUB_SHA | head -c7) .
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push ${{secrets.DOCKER_REGISTRY}}:$(echo $GITHUB_SHA | head -c7)

      - name: Update deployment file with new image
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{secrets.DOCKER_REGISTRY}}:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yaml

      - name: Update deployment file with secret name
        run: sed -i 's|<SECRET_NAME>|${{secrets.DOCKER_REGISTRY}}:'${{secrets.KUBERNETES_SECRET_NAME}}'|' $GITHUB_WORKSPACE/config/deployment.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{secrets.KUBERNETES_CONTEXT}}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yaml

      - name: Verify deployment
        run: kubectl rollout status deployment invoice-store-deployment